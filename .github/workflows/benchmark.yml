name: benchmark

env:
  POETRY_VERSION: "1.4"

on:
  workflow_dispatch: # manual invocation

jobs:
  make-workflow:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.12"
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        num_elements: [1, 10, 100, 1_000, 10_000]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure poetry
        run: |
          python -m pip install poetry==${{ env.POETRY_VERSION }}
          poetry config virtualenvs.in-project true
          poetry config installer.modern-installation false

      - name: Cache the virtualenv
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: ${{ runner.os }}-test-${{ matrix.python-version }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install --without dev,pyinstaller

      - name: Run app make workflow command
        run: |
          poetry run hpcflow --timeit-file benchmark_${{ matrix.num_elements }}_elements.txt ./hpcflow/tests/data/benchmark_${{ matrix.num_elements }}_elements.yaml

      - uses: actions/upload-artifact@v3
        with:
            name: benchmark_${{ matrix.num_elements }}_elements.txt
            path: benchmark_${{ matrix.num_elements }}_elements.txt
 
